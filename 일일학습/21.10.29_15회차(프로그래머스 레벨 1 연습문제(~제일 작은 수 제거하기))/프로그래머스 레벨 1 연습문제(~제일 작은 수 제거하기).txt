21.10.29_15회차
===============================================================================
*프로그래머스 레벨 1 연습문제(~제일 작은 수 제거하기)
===============================================================================






#########################################################################################
예제24)연습문제

1)직사각형 별찍기
이 문제에는 표준 입력으로 두 개의 정수 n과 m이 주어집니다.
별(*) 문자를 이용해 가로의 길이가 n, 세로의 길이가 m인 직사각형 형태를 출력해보세요.

import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();

        System.out.println(a + b);
    }
}

https://programmers.co.kr/learn/courses/30/lessons/12969
#########################################################################################




답:

import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();

        
        
        for(int i=0;i<b;i++) {
        	for(int j=0;j<a;j++) {
        		System.out.print('*');
        	}
        	System.out.println();
        }
    }
}


















#########################################################################################
예제25)연습문제

1)x만큼 간격이 있는 n개의 숫자

함수 solution은 정수 x와 자연수 n을 입력 받아, x부터 시작해 x씩 증가하는 숫자를 n개 지니는 리스트를 리턴해야 합니다. 다음 제한 조건을 보고, 조건을 만족하는 함수, solution을 완성해주세요.

제한 조건
x는 -10000000 이상, 10000000 이하인 정수입니다.
n은 1000 이하인 자연수입니다.
입출력 예
x	n	answer
2	5	[2,4,6,8,10]
4	3	[4,8,12]
-4	2	[-4, -8]



class Solution {
    public long[] solution(int x, int n) {
        long[] answer = {};
        return answer;
    }
}

https://programmers.co.kr/learn/courses/30/lessons/12954
#########################################################################################




답:




import java.util.*;

class Solution {
    public long[] solution(int x, int n) {
        long[] answer = new long[n];
        
        
        
        for(long i=1;i<=n;i++) {
        	answer[(int)i-1] = (x*i);
        }
        
        return answer;
    }
}


















#########################################################################################
예제26)연습문제

1)행렬의 덧셈


행렬의 덧셈은 행과 열의 크기가 같은 두 행렬의 같은 행, 같은 열의 값을 서로 더한 결과가 됩니다. 2개의 행렬 arr1과 arr2를 입력받아, 행렬 덧셈의 결과를 반환하는 함수, solution을 완성해주세요.

제한 조건
행렬 arr1, arr2의 행과 열의 길이는 500을 넘지 않습니다.
입출력 예
arr1	arr2	return
[[1,2],[2,3]]	[[3,4],[5,6]]	[[4,6],[7,9]]
[[1],[2]]	[[3],[4]]	[[4],[6]]

class Solution {
    public int[][] solution(int[][] arr1, int[][] arr2) {
        int[][] answer = {};
        return answer;
    }
}

https://programmers.co.kr/learn/courses/30/lessons/12950
#########################################################################################




답:








class Solution {
    public int[][] solution(int[][] arr1, int[][] arr2) {
        int[][] answer = new int[arr1.length][arr1[0].length];
        
        for(int i=0;i<arr1.length;i++) {
        	for(int j=0;j<arr1[0].length;j++) {
        		answer[i][j] = arr1[i][j] + arr2[i][j];
        	}
        }
        
        return answer;
    }
}
















#########################################################################################
예제27)연습문제

1)행렬의 덧셈


프로그래머스 모바일은 개인정보 보호를 위해 고지서를 보낼 때 고객들의 전화번호의 일부를 가립니다.
전화번호가 문자열 phone_number로 주어졌을 때, 전화번호의 뒷 4자리를 제외한 나머지 숫자를 전부 *으로 가린 문자열을 리턴하는 함수, solution을 완성해주세요.

제한 조건
s는 길이 4 이상, 20이하인 문자열입니다.
입출력 예
phone_number	return
"01033334444"	"*******4444"
"027778888"	"*****8888"


class Solution {
    public String solution(String phone_number) {
        String answer = "";
        return answer;
    }
}

https://programmers.co.kr/learn/courses/30/lessons/12948
#########################################################################################




답:

class Solution {
    public String solution(String phone_number) {
        String answer = "";
        
        for(int i=0;i<phone_number.length()-4;i++) {
        	answer += '*';
        }
        
        answer += phone_number.substring(phone_number.length()-4);
        
        return answer;
    }
}



class Solution {
    public String solution(String phone_number) {
        String answer = "";
        
        char[] tmp = phone_number.toCharArray();
        
        for(int i=0;i<phone_number.length()-4;i++) {
        	tmp[i] = '*';
        }
      
        answer = new String(tmp);
        return answer;
    }
}



























#########################################################################################
예제28)연습문제

1)하샤드 수

양의 정수 x가 하샤드 수이려면 x의 자릿수의 합으로 x가 나누어져야 합니다. 예를 들어 18의 자릿수 합은 1+8=9이고, 18은 9로 나누어 떨어지므로 18은 하샤드 수입니다. 자연수 x를 입력받아 x가 하샤드 수인지 아닌지 검사하는 함수, solution을 완성해주세요.

제한 조건
x는 1 이상, 10000 이하인 정수입니다.
입출력 예
arr	return
10	true
12	true
11	false
13	false
입출력 예 설명
입출력 예 #1
10의 모든 자릿수의 합은 1입니다. 10은 1로 나누어 떨어지므로 10은 하샤드 수입니다.

입출력 예 #2
12의 모든 자릿수의 합은 3입니다. 12는 3으로 나누어 떨어지므로 12는 하샤드 수입니다.

입출력 예 #3
11의 모든 자릿수의 합은 2입니다. 11은 2로 나누어 떨어지지 않으므로 11는 하샤드 수가 아닙니다.

입출력 예 #4
13의 모든 자릿수의 합은 4입니다. 13은 4로 나누어 떨어지지 않으므로 13은 하샤드 수가 아닙니다.

class Solution {
    public boolean solution(int x) {
        boolean answer = true;
        return answer;
    }
}

https://programmers.co.kr/learn/courses/30/lessons/12947
#########################################################################################




답:



class Solution {
    public boolean solution(int x) {
        boolean answer = true;
        
        String str = String.valueOf(x);
        int tmp = 0;
        for(int i=0;i<str.length();i++) {
        	tmp += str.charAt(i) - 48;
        }
        
        if(x%tmp != 0) return false;
        
        return answer;
    }
}


















#########################################################################################
예제29)연습문제

1)평균 구하기

정수를 담고 있는 배열 arr의 평균값을 return하는 함수, solution을 완성해보세요.

제한사항
arr은 길이 1 이상, 100 이하인 배열입니다.
arr의 원소는 -10,000 이상 10,000 이하인 정수입니다.
입출력 예
arr	return
[1,2,3,4]	2.5
[5,5]	5


class Solution {
    public double solution(int[] arr) {
        double answer = 0;
        return answer;
    }
}

https://programmers.co.kr/learn/courses/30/lessons/12944
#########################################################################################




답:


class Solution {
    public double solution(int[] arr) {
        double answer = 0;
        double sum = 0;
        for(int i=0;i<arr.length;i++) {
        	sum += arr[i];
        }
        
        answer = sum / arr.length;
        
        return answer;
    }
}
















#########################################################################################
예제30)연습문제

1)콜라츠 추측

1937년 Collatz란 사람에 의해 제기된 이 추측은, 주어진 수가 1이 될때까지 다음 작업을 반복하면, 모든 수를 1로 만들 수 있다는 추측입니다. 작업은 다음과 같습니다.

1-1. 입력된 수가 짝수라면 2로 나눕니다. 
1-2. 입력된 수가 홀수라면 3을 곱하고 1을 더합니다.
2. 결과로 나온 수에 같은 작업을 1이 될 때까지 반복합니다.
예를 들어, 입력된 수가 6이라면 6→3→10→5→16→8→4→2→1 이 되어 총 8번 만에 1이 됩니다. 위 작업을 몇 번이나 반복해야하는지 반환하는 함수, solution을 완성해 주세요. 단, 작업을 500번을 반복해도 1이 되지 않는다면 –1을 반환해 주세요.

제한 사항
입력된 수, num은 1 이상 8000000 미만인 정수입니다.
입출력 예
n	result
6	8
16	4
626331	-1
입출력 예 설명
입출력 예 #1
문제의 설명과 같습니다.

입출력 예 #2
16 -> 8 -> 4 -> 2 -> 1 이되어 총 4번만에 1이 됩니다.

입출력 예 #3
626331은 500번을 시도해도 1이 되지 못하므로 -1을 리턴해야합니다.



class Solution {
    public int solution(int num) {
        int answer = 0;
        return answer;
    }
}


https://programmers.co.kr/learn/courses/30/lessons/12943
#########################################################################################




답:




class Solution {
    public int solution(int num) {
        int answer = 0;
        
        long number = num;
        while(answer<500) {
        	if(number==1) break;
        	if(number%2==0) number /= 2;
        	else number = number*3+1;
        	answer++;
        }
        
        if(answer==500) return -1;
        
        return answer;
    }
}
















#########################################################################################
예제31)연습문제(유클리드 호제법)

1)최대공약수와 최소공배수
두 수를 입력받아 두 수의 최대공약수와 최소공배수를 반환하는 함수, solution을 완성해 보세요. 배열의 맨 앞에 최대공약수, 그다음 최소공배수를 넣어 반환하면 됩니다. 예를 들어 두 수 3, 12의 최대공약수는 3, 최소공배수는 12이므로 solution(3, 12)는 [3, 12]를 반환해야 합니다.

제한 사항
두 수는 1이상 1000000이하의 자연수입니다.
입출력 예
n	m	return
3	12	[3, 12]
2	5	[1, 10]
입출력 예 설명
입출력 예 #1
위의 설명과 같습니다.

입출력 예 #2
자연수 2와 5의 최대공약수는 1, 최소공배수는 10이므로 [1, 10]을 리턴해야 합니다.


class Solution {
    public int[] solution(int n, int m) {
        int[] answer = {};
        return answer;
    }
}

https://programmers.co.kr/learn/courses/30/lessons/12940
#########################################################################################




답:



import java.util.*;

class Solution {
	
	public int GCD(int a, int b) {
		if(a<b) {
			int tmp = a;
			a = b;
			b = tmp;
		}
		
		while(b!=0) {
			int n = a % b;
			a = b;
			b = n;
		}
		
		return a;
	}
	
    public int[] solution(int n, int m) {
        int[] answer = new int[2];
        
        
        answer[0] = GCD(n,m);
        answer[1] = (n*m) / GCD(n,m);
      
        
        return answer;
    }
}






















#########################################################################################
예제32)연습문제

1)짝수와 홀수

정수 num이 짝수일 경우 "Even"을 반환하고 홀수인 경우 "Odd"를 반환하는 함수, solution을 완성해주세요.

제한 조건
num은 int 범위의 정수입니다.
0은 짝수입니다.
입출력 예
num	return
3	"Odd"
4	"Even"



class Solution {
    public String solution(int num) {
        String answer = "";
        return answer;
    }
}


https://programmers.co.kr/learn/courses/30/lessons/12937
#########################################################################################




답:








class Solution {
    public String solution(int num) {
        String answer = "";
        
        if(num%2==0) answer = "Even";
        else answer = "Odd";
        return answer;
    }
}


















#########################################################################################
예제33)연습문제

1)제일 작은 수 제거하기
정수를 저장한 배열, arr 에서 가장 작은 수를 제거한 배열을 리턴하는 함수, solution을 완성해주세요. 단, 리턴하려는 배열이 빈 배열인 경우엔 배열에 -1을 채워 리턴하세요. 예를들어 arr이 [4,3,2,1]인 경우는 [4,3,2]를 리턴 하고, [10]면 [-1]을 리턴 합니다.

제한 조건
arr은 길이 1 이상인 배열입니다.
인덱스 i, j에 대해 i ≠ j이면 arr[i] ≠ arr[j] 입니다.
입출력 예
arr	return
[4,3,2,1]	[4,3,2]
[10]	[-1]



class Solution {
    public int[] solution(int[] arr) {
        int[] answer = {};
        return answer;
    }
}



https://programmers.co.kr/learn/courses/30/lessons/12935
#########################################################################################




답(sort내장함수를사용한 결과):


import java.util.Arrays;

class Solution {
    public int[] solution(int[] arr) {
        int[] answer = new int[arr.length-1];
        
        
        if(arr.length == 1) return new int[] {-1};
        
        
        int[] tmp = Arrays.copyOf(arr, arr.length);
        Arrays.sort(tmp);        
        int min = tmp[0];
        
        int j = 0;
        for(int i=0;i<arr.length;i++) {
        	if(arr[i] == min) {
        		continue;
        	}
        	answer[j] = arr[i];        		
        	j++;
        }
        
        return answer;
    }
}





답(선택정렬을 이용한 답) :

class Solution {
    public int[] solution(int[] arr) {
        int[] answer = new int[arr.length-1];
        
        
        if(arr.length == 1) return new int[] {-1};
        
        int min = arr[0];
        int idx = 0;
        for(int i=1;i<arr.length;i++) {
        	if(arr[i] < min) {
        		min = arr[i];
        		idx = i;
        	}
        }
        
        int j = 0;
        for(int i=0;i<arr.length;i++) {
        	if(arr[i] == min) {
        		continue;
        	}
        	answer[j] = arr[i];        		
        	j++;
        }
        
        return answer;
    }
}