21.11.05_22회차
===============================================================================
*다양한유형문제
==============================================================================















#########################################################################################
예제83)월간 코드 챌린지 시즌 2

1)괄호 회전하기
-문제들어가서 봐라

class Solution {
    public int solution(String s) {
        int answer = -1;
        return answer;
    }
}

https://programmers.co.kr/learn/courses/30/lessons/76502
#########################################################################################




답:





import java.util.*;

class Solution {
    public int solution(String s) {
        int answer = 0;
        if(s.length()%2!=0) return 0;

     
        for(int index = 0;index<s.length();index++) {
        	String str = "";
        	for(int i=index;i<s.length();i++) str += s.charAt(i);
        	for(int i=0;i<index;i++) str += s.charAt(i);
        	
        	Stack<Character> stack = new Stack<>();
        	for(int i=0;i<s.length();i++) {
        		char c = str.charAt(i);
        		if(c == '{' || c == '(' || c == '[') {
        			stack.push(c);
        		}else if(c == '}') {
        			if(stack.isEmpty()) {
        				stack.push('f');
        				break;
        			}
        			if(stack.peek()=='{') {
        				stack.pop();
        			}else {
        				stack.push('f');
        				break;
        			}
        		}else if(c == ')') {
        			if(stack.isEmpty()) {
        				stack.push('f');
        				break;
        			}
        			if(stack.peek()=='(') {
        				stack.pop();
        			}else {
        				stack.push('f');
        				break;
        			}
        		}else if(c == ']') {
        			if(stack.isEmpty()) {
        				stack.push('f');
        				break;
        			}
        			if(stack.peek()=='[') {
        				stack.pop();
        			}else {
        				stack.push('f');
        				break;
        			}
        		}
        		
        	}
        	if(stack.isEmpty()) answer++;
        }
        
        
        
        return answer;
    }
}
























#########################################################################################
예제84)월간 코드 챌린지 시즌 2

1)2개 이하로 다른 비트


양의 정수 x에 대한 함수 f(x)를 다음과 같이 정의합니다.

x보다 크고 x와 비트가 1~2개 다른 수들 중에서 제일 작은 수
예를 들어,

f(2) = 3 입니다. 다음 표와 같이 2보다 큰 수들 중에서 비트가 다른 지점이 2개 이하이면서 제일 작은 수가 3이기 때문입니다.
수	비트	다른 비트의 개수
2	000...0010	
3	000...0011	1
f(7) = 11 입니다. 다음 표와 같이 7보다 큰 수들 중에서 비트가 다른 지점이 2개 이하이면서 제일 작은 수가 11이기 때문입니다.
수	비트	다른 비트의 개수
7	000...0111	
8	000...1000	4
9	000...1001	3
10	000...1010	3
11	000...1011	2
정수들이 담긴 배열 numbers가 매개변수로 주어집니다. numbers의 모든 수들에 대하여 각 수의 f 값을 배열에 차례대로 담아 return 하도록 solution 함수를 완성해주세요.

제한사항
1 ≤ numbers의 길이 ≤ 100,000
0 ≤ numbers의 모든 수 ≤ 1015
입출력 예
numbers	result
[2,7]	[3,11]
입출력 예 설명
입출력 예 #1

문제 예시와 같습니다.


class Solution {
    public long[] solution(long[] numbers) {
        long[] answer = {};
        return answer;
    }
}


https://programmers.co.kr/learn/courses/30/lessons/77885
#########################################################################################




답:



class Solution {
    public long[] solution(long[] numbers) {
        long[] answer = new long[numbers.length];
       
        
        for(int i=0;i<numbers.length;i++) {
        	if(numbers[i]%2==0) {
        		answer[i] = numbers[i] + 1;
        	}else {
        		String str = Long.toBinaryString(numbers[i]);
        		boolean check = false;
        		String tmp = "";
        		for(int j=str.length()-2;j>=0;j--) {
        			if(str.charAt(j)=='0') {
        				tmp = str.substring(0,j)+"10"+str.substring(j+2);
        				check = true;
        				break;
        			}
        		}
        		if(!check) {
        			tmp = "10"+str.substring(1);
        		}
        		
        		answer[i] = Long.parseLong(tmp, 2);
        		
        	}
        	
        }
        
        
        return answer;
    }
}





















#########################################################################################
예제85)월간 코드 챌린지 시즌 3

1)없는 숫자 더하기


0부터 9까지의 숫자 중 일부가 들어있는 배열 numbers가 매개변수로 주어집니다. numbers에서 찾을 수 없는 0부터 9까지의 숫자를 모두 찾아 더한 수를 return 하도록 solution 함수를 완성해주세요.

제한사항
1 ≤ numbers의 길이 ≤ 9
0 ≤ numbers의 모든 수 ≤ 9
numbers의 모든 수는 서로 다릅니다.
입출력 예
numbers	result
[1,2,3,4,6,7,8,0]	14
[5,8,4,0,6,7,9]	6
입출력 예 설명
입출력 예 #1

5, 9가 numbers에 없으므로, 5 + 9 = 14를 return 해야 합니다.
입출력 예 #2

1, 2, 3이 numbers에 없으므로, 1 + 2 + 3 = 6을 return 해야 합니다.



class Solution {
    public int solution(int[] numbers) {
        int answer = -1;
        return answer;
    }
}


https://programmers.co.kr/learn/courses/30/lessons/86051
#########################################################################################




답:





import java.util.*;

class Solution {
    public int solution(int[] numbers) {
        int answer = -1;
        
        Set<Integer> set = new HashSet<>();
        
        
        for(int i=0;i<numbers.length;i++) {
        	set.add(numbers[i]);
        }
        int sum = 0;
        for(int i=0;i<=9;i++) {
        	if(!set.contains(i)) {
        		sum += i;
        	}
        }
        
        return sum;
    }
}













#########################################################################################
예제86)월간 코드 챌린지 시즌 3

1)나머지가 1이 되는 수 찾기
자연수 n이 매개변수로 주어집니다. n을 x로 나눈 나머지가 1이 되도록 하는 가장 작은 자연수 x를 return 하도록 solution 함수를 완성해주세요. 답이 항상 존재함은 증명될 수 있습니다.

제한사항
3 ≤ n ≤ 1,000,000
입출력 예
n	result
10	3
12	11
입출력 예 설명
입출력 예 #1

10을 3으로 나눈 나머지가 1이고, 3보다 작은 자연수 중에서 문제의 조건을 만족하는 수가 없으므로, 3을 return 해야 합니다.
입출력 예 #2

12를 11로 나눈 나머지가 1이고, 11보다 작은 자연수 중에서 문제의 조건을 만족하는 수가 없으므로, 11을 return 해야 합니다.



class Solution {
    public int solution(int n) {
        int answer = 0;
        return answer;
    }
}


https://programmers.co.kr/learn/courses/30/lessons/87389
#########################################################################################




답:





class Solution {
    public int solution(int n) {
        int answer = 0;
        
        for(int i=2;i<n;i++) {
        	if(n%i==1) {
        		return i;
        	}
        }
        
        
        return answer;
    }
}



















#########################################################################################
예제87)백준 브루트포스

1)영화감독 숌
666은 종말을 나타내는 숫자라고 한다. 따라서, 많은 블록버스터 영화에서는 666이 들어간 제목을 많이 사용한다. 영화감독 숌은 세상의 종말 이라는 시리즈 영화의 감독이다. 조지 루카스는 스타워즈를 만들 때, 스타워즈 1, 스타워즈 2, 스타워즈 3, 스타워즈 4, 스타워즈 5, 스타워즈 6과 같이 이름을 지었고, 피터 잭슨은 반지의 제왕을 만들 때, 반지의 제왕 1, 반지의 제왕 2, 반지의 제왕 3과 같이 영화 제목을 지었다.

하지만 숌은 자신이 조지 루카스와 피터 잭슨을 뛰어넘는다는 것을 보여주기 위해서 영화 제목을 좀 다르게 만들기로 했다.

종말의 숫자란 어떤 수에 6이 적어도 3개이상 연속으로 들어가는 수를 말한다. 제일 작은 종말의 숫자는 666이고, 그 다음으로 큰 수는 1666, 2666, 3666, .... 과 같다.

따라서, 숌은 첫 번째 영화의 제목은 세상의 종말 666, 두 번째 영화의 제목은 세상의 종말 1666 이렇게 이름을 지을 것이다. 일반화해서 생각하면, N번째 영화의 제목은 세상의 종말 (N번째로 작은 종말의 숫자) 와 같다.

숌이 만든 N번째 영화의 제목에 들어간 숫자를 출력하는 프로그램을 작성하시오. 숌은 이 시리즈를 항상 차례대로 만들고, 다른 영화는 만들지 않는다.



https://www.acmicpc.net/problem/1436
#########################################################################################




답:

import java.util.Scanner;

public class Main {
	public static Scanner scan = new Scanner(System.in);
	
	public static void main(String[] args) {
		int a = scan.nextInt();
	
	
		int num = 666;
		
		int count = 1;
		
		while(a!=count) {
			num++;
			
			if(Integer.toString(num).contains("666")) {
				count++;
			}
		}
		
		 
		 
	    System.out.println(num);
	}
}



























#########################################################################################
예제88)백준 브루트포스

1)덩치

https://www.acmicpc.net/problem/7568
#########################################################################################




답:




import java.util.*;
import java.util.Scanner;

public class Main {
	public static Scanner scan = new Scanner(System.in);
	
	public static void main(String[] args) {
	
		int num = scan.nextInt();
	
	
		int[][] arr = new int[num][2];
		
		for(int i=0;i<num;i++) {
			arr[i][0] = scan.nextInt();
			arr[i][1] = scan.nextInt();
		}
		
		for(int i=0;i<num;i++) {
			int rank = 1;
			for(int j=0;j<num;j++) {
				if(i==j) continue;
				
				if(arr[i][0] < arr[j][0] && arr[i][1] < arr[j][1]) {
					rank++;
				}
			}
			System.out.print(rank+" ");
		}
	}
}


















#########################################################################################
예제89)백준 브루트포스

1)블랙잭

https://www.acmicpc.net/problem/2798
#########################################################################################




답:


import java.util.*;
import java.util.Scanner;

public class Main {
	public static Scanner scan = new Scanner(System.in);
	
	public static int tmp(int[] arr, int n, int m) {
		int result = 0;
		
		for(int index=0;index<n-2;index++) {
			for(int i=index+1;i<n-1;i++) {
				for(int j=i+1;j<n;j++) {
					int tmp = arr[index] + arr[i] + arr[j];
					
					if(tmp==m) {
						return tmp;
					}
					if(result<tmp && tmp < m) {
						result = tmp;
					}
				}
			}
		}
		
		return result;
	}
	public static void main(String[] args) {
	
		int n = scan.nextInt();
		int m = scan.nextInt();
		
		
		
		int[] arr = new int[n];
		for(int i=0;i<arr.length;i++) {
			arr[i] = scan.nextInt();
		}
		
		
		int result = tmp(arr, n, m);
		
		System.out.println(result);
		
	}
}
