21.10.30_16회차
===============================================================================
*레벨1연습문제(~소수찾기)
===============================================================================






#########################################################################################
예제34)연습문제

1)정수 제곱근 판별

임의의 양의 정수 n에 대해, n이 어떤 양의 정수 x의 제곱인지 아닌지 판단하려 합니다.
n이 양의 정수 x의 제곱이라면 x+1의 제곱을 리턴하고, n이 양의 정수 x의 제곱이 아니라면 -1을 리턴하는 함수를 완성하세요.

제한 사항
n은 1이상, 50000000000000 이하인 양의 정수입니다.
입출력 예
n	return
121	144
3	-1
입출력 예 설명
입출력 예#1
121은 양의 정수 11의 제곱이므로, (11+1)를 제곱한 144를 리턴합니다.

입출력 예#2
3은 양의 정수의 제곱이 아니므로, -1을 리턴합니다.


class Solution {
    public long solution(long n) {
        long answer = 0;
        return answer;
    }
}

https://programmers.co.kr/learn/courses/30/lessons/12934
#########################################################################################




답:




class Solution {
    public long solution(long n) {
        long answer = 0;
        
        long sqrt = (long)Math.sqrt(n);
        
        if(n == Math.pow(sqrt, 2)) {
        	answer = (long)Math.pow(sqrt+1, 2);
        } else {
        	answer = -1;
        }
        
        return answer;
    }
}








#########################################################################################
예제35)연습문제

1)정수 내림차순으로 배치하기

함수 solution은 정수 n을 매개변수로 입력받습니다. n의 각 자릿수를 큰것부터 작은 순으로 정렬한 새로운 정수를 리턴해주세요. 예를들어 n이 118372면 873211을 리턴하면 됩니다.

제한 조건
n은 1이상 8000000000 이하인 자연수입니다.
입출력 예
n	return
118372	873211


class Solution {
    public long solution(long n) {
        long answer = 0;
        return answer;
    }
}



https://programmers.co.kr/learn/courses/30/lessons/12933
#########################################################################################




답:

import java.util.Arrays;

class Solution {
    public long solution(long n) {
        long answer = 0;
      
        String str = String.valueOf(n);
        int len = str.length();
        int[] num = new int[len];
           
        for(int i=0;i<len;i++) {
        	num[i] = str.charAt(i)-48;
        }
        
        Arrays.sort(num);
        
        
        String tmp = "";
        for(int i=len-1;i>=0;i--) {
        	tmp+=num[i];
        }
        
        answer = Long.valueOf(tmp);
        return answer;
    }
}



















#########################################################################################
예제36)연습문제

1)자연수 뒤집어 배열로 만들기

자연수 n을 뒤집어 각 자리 숫자를 원소로 가지는 배열 형태로 리턴해주세요. 예를들어 n이 12345이면 [5,4,3,2,1]을 리턴합니다.

제한 조건
n은 10,000,000,000이하인 자연수입니다.
입출력 예
n	return
12345	[5,4,3,2,1]



class Solution {
    public int[] solution(long n) {
        int[] answer = {};
        return answer;
    }
}



https://programmers.co.kr/learn/courses/30/lessons/12932
#########################################################################################




답:





class Solution {
    public int[] solution(long n) {
        
        String str = Long.toString(n);
        int len = str.length();
        int[] answer = new int[len];
        
        int j = 0;
        for(int i=len-1;i>=0;i--) {
        	answer[j++] = str.charAt(i)-48;
        }
        
        return answer;
    }
}



















#########################################################################################
예제37)연습문제

1)자릿수 더하기
자연수 N이 주어지면, N의 각 자릿수의 합을 구해서 return 하는 solution 함수를 만들어 주세요.
예를들어 N = 123이면 1 + 2 + 3 = 6을 return 하면 됩니다.

제한사항
N의 범위 : 100,000,000 이하의 자연수
입출력 예
N	answer
123	6
987	24
입출력 예 설명
입출력 예 #1
문제의 예시와 같습니다.

입출력 예 #2
9 + 8 + 7 = 24이므로 24를 return 하면 됩니다.



import java.util.*;

public class Solution {
    public int solution(int n) {
        int answer = 0;

        // [실행] 버튼을 누르면 출력 값을 볼 수 있습니다.
        System.out.println("Hello Java");

        return answer;
    }
}




https://programmers.co.kr/learn/courses/30/lessons/12931
#########################################################################################




답:




import java.util.*;

public class Solution {
    public int solution(int n) {
        int answer = 0;

        // [실행] 버튼을 누르면 출력 값을 볼 수 있습니다.
        System.out.println("Hello Java");
        
        
        String str = Integer.toString(n);
        
        int len = str.length();
        
        for(int i=0;i<len;i++) {
        	answer += str.charAt(i)-48;
        }

        return answer;
    }
}




























#########################################################################################
예제38)연습문제

1)이상한 문자 만들기

문자열 s는 한 개 이상의 단어로 구성되어 있습니다. 각 단어는 하나 이상의 공백문자로 구분되어 있습니다. 각 단어의 짝수번째 알파벳은 대문자로, 홀수번째 알파벳은 소문자로 바꾼 문자열을 리턴하는 함수, solution을 완성하세요.

제한 사항
문자열 전체의 짝/홀수 인덱스가 아니라, 단어(공백을 기준)별로 짝/홀수 인덱스를 판단해야합니다.
첫 번째 글자는 0번째 인덱스로 보아 짝수번째 알파벳으로 처리해야 합니다.
입출력 예
s	return
"try hello world"	"TrY HeLlO WoRlD"
입출력 예 설명
"try hello world"는 세 단어 "try", "hello", "world"로 구성되어 있습니다. 각 단어의 짝수번째 문자를 대문자로, 홀수번째 문자를 소문자로 바꾸면 "TrY", "HeLlO", "WoRlD"입니다. 따라서 "TrY HeLlO WoRlD" 를 리턴합니다.



class Solution {
    public String solution(String s) {
        String answer = "";
        return answer;
    }
}




https://programmers.co.kr/learn/courses/30/lessons/12930
#########################################################################################




답:





class Solution {
    public String solution(String s) {
        String answer = "";
        int len = s.length();
        
        
        s = s.toLowerCase();
        int j=0;
        for(int i=0;i<len;i++) {
        	char ch = s.charAt(i);
        	if(ch == ' ') {
        		j=0;
        		answer += ch;
    			continue;
    		}
        
        	if(j++ % 2 == 0) {
        		answer += (char)(ch-32);        			
        	}else {       	
        		answer += ch;
        	}       		

        }
        
        return answer;
    }
}












#########################################################################################
예제39)연습문제

1)약수의 합
정수 n을 입력받아 n의 약수를 모두 더한 값을 리턴하는 함수, solution을 완성해주세요.

제한 사항
n은 0 이상 3000이하인 정수입니다.
입출력 예
n	return
12	28
5	6
입출력 예 설명
입출력 예 #1
12의 약수는 1, 2, 3, 4, 6, 12입니다. 이를 모두 더하면 28입니다.

입출력 예 #2
5의 약수는 1, 5입니다. 이를 모두 더하면 6입니다.




class Solution {
    public int solution(int n) {
        int answer = 0;
        return answer;
    }
}




https://programmers.co.kr/learn/courses/30/lessons/12928
#########################################################################################




답:




class Solution {
    public int solution(int n) {
        if(n==0) return 0;
    	
    	int answer = 0;
        
        for(int i=1;i<=n;i++) {
        	if(n%i==0) {
        		answer += i;
        	}
        }
        
        return answer;
    }
}


















#########################################################################################
예제40)연습문제

1)시저 암호
어떤 문장의 각 알파벳을 일정한 거리만큼 밀어서 다른 알파벳으로 바꾸는 암호화 방식을 시저 암호라고 합니다. 예를 들어 "AB"는 1만큼 밀면 "BC"가 되고, 3만큼 밀면 "DE"가 됩니다. "z"는 1만큼 밀면 "a"가 됩니다. 문자열 s와 거리 n을 입력받아 s를 n만큼 민 암호문을 만드는 함수, solution을 완성해 보세요.

제한 조건
공백은 아무리 밀어도 공백입니다.
s는 알파벳 소문자, 대문자, 공백으로만 이루어져 있습니다.
s의 길이는 8000이하입니다.
n은 1 이상, 25이하인 자연수입니다.
입출력 예
s	n	result
"AB"	1	"BC"
"z"	1	"a"
"a B z"	4	"e F d"

class Solution {
    public String solution(String s, int n) {
        String answer = "";
        return answer;
    }
}


https://programmers.co.kr/learn/courses/30/lessons/12926
#########################################################################################




답:




class Solution {
    public String solution(String s, int n) {
        StringBuilder answer = new StringBuilder();
        
        for(char ch : s.toCharArray()) {
        	if(Character.isUpperCase(ch)) {
        		answer.append((char)((ch+n-'A')%26+'A'));
        	}else if(Character.isLowerCase(ch)) {
        		answer.append((char)((ch+n-'a')%26+'a'));
        	} else {
        		answer.append(ch);
        	}
        }
        
        System.out.println(answer.toString());
        return answer.toString();
    }
}



















#########################################################################################
예제41)연습문제

1)문자열을 정수로 바꾸기
문자열 s를 숫자로 변환한 결과를 반환하는 함수, solution을 완성하세요.

제한 조건
s의 길이는 1 이상 5이하입니다.
s의 맨앞에는 부호(+, -)가 올 수 있습니다.
s는 부호와 숫자로만 이루어져있습니다.
s는 "0"으로 시작하지 않습니다.
입출력 예
예를들어 str이 "1234"이면 1234를 반환하고, "-1234"이면 -1234를 반환하면 됩니다.
str은 부호(+,-)와 숫자로만 구성되어 있고, 잘못된 값이 입력되는 경우는 없습니다.

class Solution {
    public int solution(String s) {
        int answer = 0;
        return answer;
    }
}

https://programmers.co.kr/learn/courses/30/lessons/12925
#########################################################################################




답:




class Solution {
    public int solution(String s) {
        int answer = 0;
        
         
        answer = Integer.parseInt(s);        	 
         
        
        return answer;
    }
}

















#########################################################################################
예제42)연습문제

1)수박수박수박수박수박수?
길이가 n이고, "수박수박수박수...."와 같은 패턴을 유지하는 문자열을 리턴하는 함수, solution을 완성하세요. 예를들어 n이 4이면 "수박수박"을 리턴하고 3이라면 "수박수"를 리턴하면 됩니다.

제한 조건
n은 길이 10,000이하인 자연수입니다.
입출력 예
n	return
3	"수박수"
4	"수박수박"


class Solution {
    public String solution(int n) {
        String answer = "";
        return answer;
    }
}


https://programmers.co.kr/learn/courses/30/lessons/12922
#########################################################################################



답1:

class Solution {
    public String solution(int n) {
        String answer = "";
        
        
        answer = new String(new char[n/2+1]).replace("\0", "수박").substring(0, n);
        //char 배열은 유일하게 초기화안할시 null로 초기화된다. 그래서 그 널값을 수박으로 바꾸는것이다.
        return answer;
    }
}




답2:

class Solution {
    public String solution(int n) {
        String answer = "";
//        String str = "수박"; //주석 & ~주석 방식의 시간은 비슷하다
        char[] tmp = {'수', '박'};
        for(int i=0;i<n;i++) {
//        	answer += str.charAt(i%2);
        	answer += tmp[i%2];
        }
        
        return answer;
    }
}












#########################################################################################
예제43)연습문제

1)소수 찾기
1부터 입력받은 숫자 n 사이에 있는 소수의 개수를 반환하는 함수, solution을 만들어 보세요.

소수는 1과 자기 자신으로만 나누어지는 수를 의미합니다.
(1은 소수가 아닙니다.)

제한 조건
n은 2이상 1000000이하의 자연수입니다.
입출력 예
n	result
10	4
5	3
입출력 예 설명
입출력 예 #1
1부터 10 사이의 소수는 [2,3,5,7] 4개가 존재하므로 4를 반환

입출력 예 #2
1부터 5 사이의 소수는 [2,3,5] 3개가 존재하므로 3를 반환

class Solution {
    public int solution(int n) {
        int answer = 0;
        return answer;
    }
}

https://programmers.co.kr/learn/courses/30/lessons/12921
#########################################################################################



답:




class Solution {
    public int solution(int n) {
        int answer = 0;
        
        for(int i=2;i<=n;i++) {
        	boolean flag = true;
        	for(int j=2;j<=Math.sqrt(i);j++) {
        		if(i%j==0) {
        			flag = false;
        			break;
        		}
        	}
        	if(flag == true) answer++;
        }
        
        return answer;
    }
}

