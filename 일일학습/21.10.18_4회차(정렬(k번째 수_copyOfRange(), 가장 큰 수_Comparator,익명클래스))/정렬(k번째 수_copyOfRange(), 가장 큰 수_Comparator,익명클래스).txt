21.10.18_4회차
===============================================================================
*정렬(k번째 수_copyOfRange(), 가장 큰 수_Comparator,익명클래스)
===============================================================================






################################################################################################################
예제11) 정렬

1)k번째 수
배열 array의 i번째 숫자부터 j번째 숫자까지 자르고 정렬했을 때, k번째에 있는 수를 구하려 합니다.

예를 들어 array가 [1, 5, 2, 6, 3, 7, 4], i = 2, j = 5, k = 3이라면

array의 2번째부터 5번째까지 자르면 [5, 2, 6, 3]입니다.
1에서 나온 배열을 정렬하면 [2, 3, 5, 6]입니다.
2에서 나온 배열의 3번째 숫자는 5입니다.
배열 array, [i, j, k]를 원소로 가진 2차원 배열 commands가 매개변수로 주어질 때, commands의 모든 원소에 대해 앞서 설명한 연산을 적용했을 때 나온 결과를 배열에 담아 return 하도록 solution 함수를 작성해주세요.

제한사항
array의 길이는 1 이상 100 이하입니다.
array의 각 원소는 1 이상 100 이하입니다.
commands의 길이는 1 이상 50 이하입니다.
commands의 각 원소는 길이가 3입니다.
입출력 예
array	commands	return
[1, 5, 2, 6, 3, 7, 4]	[[2, 5, 3], [4, 4, 1], [1, 7, 3]]	[5, 6, 3]
입출력 예 설명
[1, 5, 2, 6, 3, 7, 4]를 2번째부터 5번째까지 자른 후 정렬합니다. [2, 3, 5, 6]의 세 번째 숫자는 5입니다.
[1, 5, 2, 6, 3, 7, 4]를 4번째부터 4번째까지 자른 후 정렬합니다. [6]의 첫 번째 숫자는 6입니다.
[1, 5, 2, 6, 3, 7, 4]를 1번째부터 7번째까지 자릅니다. [1, 2, 3, 4, 5, 6, 7]의 세 번째 숫자는 3입니다.

출처
################################################################################################################


copyOfRange 학습후 답:

import java.util.*;

class Solution {
    public int[] solution(int[] array, int[][] commands) {
        int[] answer = {};
       
        int commandLen = commands.length;
        answer = new int[commandLen];
        
        
        for(int i=0;i<commandLen;i++) {
        	int[] tmp = Arrays.copyOfRange(array, commands[i][0]-1, commands[i][1]);
        	Arrays.sort(tmp);
        	
        	answer[i] = tmp[commands[i][2]-1];
        }

        return answer;
    }
}



copyOfRange 몰랐을때 답:

import java.util.*;

class Solution {
    public int[] solution(int[] array, int[][] commands) {
        int[] answer = {};
        
        int len = array.length;
        answer = new int[commands.length];
        
        for(int j=0;j<commands.length;j++) {
        	int j2 = 0;
        	int[] tmp = new int[commands[j][1]-commands[j][0]+1];
        	for(int i=commands[j][0]-1;i<commands[j][1];i++) {
        		tmp[j2] = array[i];
        		j2++;
        	}
        	//System.out.println(Arrays.toString(tmp));
        	Arrays.sort(tmp);
        	//System.out.println(Arrays.toString(tmp));
        	answer[j] = tmp[commands[j][2]-1];	
        }
        
        //System.out.println(Arrays.toString(answer));
        return answer;
    }
}










################################################################################################################
예제12)정렬

1)가장 큰 수
0 또는 양의 정수가 주어졌을 때, 정수를 이어 붙여 만들 수 있는 가장 큰 수를 알아내 주세요.

예를 들어, 주어진 정수가 [6, 10, 2]라면 [6102, 6210, 1062, 1026, 2610, 2106]를 만들 수 있고, 이중 가장 큰 수는 6210입니다.

0 또는 양의 정수가 담긴 배열 numbers가 매개변수로 주어질 때, 순서를 재배치하여 만들 수 있는 가장 큰 수를 문자열로 바꾸어 return 하도록 solution 함수를 작성해주세요.

제한 사항
numbers의 길이는 1 이상 100,000 이하입니다.
numbers의 원소는 0 이상 1,000 이하입니다.
정답이 너무 클 수 있으니 문자열로 바꾸어 return 합니다.
입출력 예
numbers	return
[6, 10, 2]	"6210"
[3, 30, 34, 5, 9]	"9534330" 
	
################################################################################################################


답:




import java.util.*;
class Solution {
    public String solution(int[] numbers) {
        String answer = "";
        
        int len = numbers.length;
        
        String[] str = new String[len];
        
        for(int i=0;i<len;i++) {
        	str[i] = String.valueOf(numbers[i]);
        }
        
        System.out.println(Arrays.toString(str));
        Arrays.sort(str, comp);
        System.out.println(Arrays.toString(str));
                
        if(str[0].equals("0")) return "0";
        
        for(int i=0;i<len;i++) {
        	answer += str[i];
        }
        System.out.println(answer);
        
        
        return answer;
    }
    
    public static Comparator<String> comp = new Comparator<String>(){
    	public int compare(String a, String b) {
    		return (b+a).compareTo(a+b);
    	}
    };
}





